- test:
    name: testcases/api_output/get_web_stag_token.yml
    base_url: ${ENV(sg_stag)}
    request:
      url: /api/oauth/token
      method: POST
      headers:
        Content-Type: application/json
        Accept-Encoding: deflate, gzip;q=1.0, *;q=0.5
        x-channel: web
      json:
        grant_type: password
        username: ${ENV(user_email)}
        password: ${ENV(user_password)}
        refresh_token: ""
    extract:
      access_token_sg_stag: content.access_token
    validate:
      - eq: ["status_code", 200]
    setup_hooks:
      - ${setup_hook_basicauth($request)}
    teardown_hooks:
      - ${teardown_hook_sleep($response)}

- test:
    name: get_user_me
    base_url: ${ENV(base_url_sg_stag)}
    request:
      url: /api/users/me
      method: GET
      headers:
        x-channel: web
        x-access-token: $access_token_sg_stag
    extract:
      user_id_sg_stag: content.id
      user_hash_sg_stag: content.user_hash
    validate:
      - eq: ["status_code", 200]
    setup_hooks:
      - ${setup_hook_basicauth($request)}
    teardown_hooks:
      - ${teardown_hook_sleep($response)}

- test:
    name: checkout_post
    base_url: ${ENV(base_url_sg_stag)}
    request:
      url: /api/checkouts
      method: POST
      headers:
        x-channel: web
        x-access-token: $access_token_sg_stag
    extract:
      order_number_sg_stag: content.number
    validate:
      - eq: ["status_code", 201]
    setup_hooks:
      - ${setup_hook_basicauth($request)}
    teardown_hooks:
      - ${teardown_hook_sleep($response)}