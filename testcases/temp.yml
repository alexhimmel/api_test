- test:
    name: get_token
    base_url: ${ENV(base_url_sg_stag)}
    request:
      url: /api/oauth/token
      method: POST
      headers:
        Content-Type: application/json
        Accept-Encoding: deflate, gzip;q=1.0, *;q=0.5
        x-channel: web
      json:
        grant_type: password
        username: ${ENV(email_sg_stag)}
        password: ${ENV(password_api_test)}
        refresh_token: ""
    extract:
      access_token_sg_stag: content.access_token
    validate:
      - eq: ["status_code", 200]
    setup_hooks:
      - ${setup_hook_basicauth($request)}

- test:
    name: get_user_hash
    base_url: ${ENV(sg_stag)}
    request:
      url: /api/users/me
      method: GET
      headers:
        x-channel: web
        x-access-token: $access_token_sg_stag
    extract:
      user_hash_sg_stag: content.user_hash
    validate:
      - eq: ["status_code", 200]
    setup_hooks:
      - ${setup_hook_basicauth($request)}

- test:
    name: get_autocomplete_address
    base_url: ${ENV(sg_stag)}
    request:
      url: /api/addresses
      method: GET
      headers:
        x-channel: web
      params:
        q: ${random_alphabet()}
    extract:
      building_name: content.0.building_name
      id: content.0.id
      latitude: content.0.latitude
      longitude: content.0.longitude
      street: content.0.street
      street_number: content.0.street_number
      zipcode: content.0.zipcode
    validate:
      - eq: ["status_code", 200]
    setup_hooks:
      - ${setup_hook_basicauth($request)}


- test:
    name: post_new_address
    base_url: ${ENV(sg_stag)}
    request:
      url: /api/users/me/addresses
      method: POST
      headers:
        x-channel: web
        x-access-token: $access_token_sg_stag
      json:
        alternative_phone: ""
        building_name: $building_name
        company: ""
        country: "Singapore"
        email: ${ENV(email_sg_stag)}
        firstname: ${ENV(first_name)}
        flat: "8"
        id: $id
        is_manual: false
        lastname: ${ENV(last_name_sg_stag)}
        latitude: $latitude
        level: "18"
        longitude: $longitude
        phone: ${create_random_phone_number()}
        street: $street
        street_number: $street_number
        user_hash: $user_hash_sg_stag
        zipcode: $zipcode
    extract:
      address_id_sg_stag: content.0.id
    validate:
      - eq: ["status_code", 200]
    setup_hooks:
      - ${setup_hook_basicauth($request)}